-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.


SET FOREIGN_KEY_CHECKS = 0; -- to drop the parent tables without 'Error Code: 1217
-- The DROP statements have been added to ensure that no errors occur if the script is mistakenly run more than once
DROP TABLE IF EXISTS staff CASCADE;
DROP TABLE IF EXISTS sales_outlet CASCADE;
DROP TABLE IF EXISTS customer CASCADE;
DROP TABLE IF EXISTS sales_detail CASCADE;
DROP TABLE IF EXISTS product CASCADE;
DROP TABLE IF EXISTS product_type CASCADE;
DROP TABLE IF EXISTS sales_transaction CASCADE;
SET FOREIGN_KEY_CHECKS = 1;
--

CREATE TABLE staff
(
    staff_id INT NOT NULL,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    position VARCHAR(50),
    start_date DATE,
    location VARCHAR(5),
    PRIMARY KEY (staff_id)
);

CREATE TABLE sales_outlet
(
    sales_outlet_id INT NOT NULL,
    sales_outlet_type VARCHAR(20),
    address VARCHAR(50),
    city VARCHAR(40),
    telephone VARCHAR(15),
    postal_code INT,
    manager INT,
    PRIMARY KEY (sales_outlet_id)
);

CREATE TABLE customer
(
    customer_id INT NOT NULL,
    customer_name VARCHAR(50),
    email VARCHAR(50),
    reg_date DATE,
    card_number VARCHAR(15),
    date_of_birth DATE,
    gender character(1),
    PRIMARY KEY (customer_id)
);

CREATE TABLE sales_detail
(
    sales_detail_id INT,
    transaction_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL,
    PRIMARY KEY (sales_detail_id)
);


CREATE TABLE product
(
    product_id INT NOT NULL,
    product_name VARCHAR(100),
    description VARCHAR(250),
    product_price DECIMAL,
    product_type_id INT,
    PRIMARY KEY (product_id)
);

CREATE TABLE product_type
(
    product_type_id INT NOT NULL,
    product_type VARCHAR(50),
    product_category VARCHAR(50),
    PRIMARY KEY (product_type_id)
);

CREATE TABLE sales_transaction
(
    transaction_id INT NOT NULL,
    transaction_date DATE,
    transaction_time TIME,
    sales_outlet_id INT,
    staff_id INT,
    customer_id INT,
    PRIMARY KEY (transaction_id)
);

ALTER TABLE sales_transaction
    ADD FOREIGN KEY (staff_id)
    REFERENCES staff (staff_id);


ALTER TABLE sales_transaction
    ADD FOREIGN KEY (sales_outlet_id)
    REFERENCES sales_outlet (sales_outlet_id);


ALTER TABLE sales_transaction
    ADD FOREIGN KEY (customer_id)
    REFERENCES customer (customer_id);


ALTER TABLE sales_detail
    ADD FOREIGN KEY (transaction_id)
    REFERENCES sales_transaction (transaction_id);


ALTER TABLE sales_detail
    ADD FOREIGN KEY (product_id)
    REFERENCES product (product_id);


ALTER TABLE product
    ADD FOREIGN KEY (product_type_id)
    REFERENCES product_type (product_type_id);

