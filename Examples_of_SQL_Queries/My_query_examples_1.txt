++++++++++++++++++++
BASIC SELECT QUERIES
++++++++++++++++++++
SELECT release_year, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross
FROM films
WHERE release_year > 1990
GROUP BY release_year
HAVING AVG(budget) > 60000000 
ORDER BY avg_gross DESC;
_________________________________________________________
SELECT country, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross 
FROM films  
GROUP BY country 
HAVING COUNT(*) > 10 
ORDER BY country 
LIMIT(5); 
_________________________________________________________
SELECT title, imdb_score
FROM films
JOIN reviews
ON films.id = reviews.film_id
ORDER BY imdb_score DESC;
++++++++++++
INNER JOIN
++++++++++++
#Table aliasing 
SELECT c.code AS country_code,c.name, e.year, e.inflation_rate
FROM countries AS c
INNER JOIN economies AS e
ON c.code = e.code;
____________________________________________________________
#double join statement with AND
SELECT c.code, name, region, e.year, fertility_rate, unemployment_rate
FROM countries AS c
INNER JOIN populations AS p
ON c.code = p.country_code
INNER JOIN economies AS e
ON c.code = e.code AND p.year = e.year;
________________________________________________________________
#joining fields with the same name
SELECT  countries. name AS country, continent, languages.name AS language, official  
FROM countries 
INNER JOIN languages 
USING (code); 
________________________________________________________________
#selfJoing and a condition inside ON clause
SELECT p1.country_code, p1.size AS size2010, p2.size AS size2015, (p2.size - p1.size)/p1.size *100.0 AS growth_perc 
FROM  populations AS p1 
INNER JOIN populations AS p2 ON p1.country_code = p2.country_code AND p1.year = p2.year - 5;
__________________________________________________
# CASE WHEN THEN END AS
SELECT *, CASE WHEN  surface_area > 2000000 THEN 'large'
WHEN surface_area > 350000 THEN 'medium' ELSE 'small' END  AS geosize_group FROM countries;
_______________________________________________________
#two joint queries
#first
SELECT country_code, size,
  CASE WHEN size > 50000000
            THEN 'large'
       WHEN size > 1000000
            THEN 'medium'
       ELSE 'small' END
       AS popsize_group
INTO pop_plus       
FROM populations
WHERE year = 2015;
#second
SELECT c.name, c.continent, c.geosize_group,p.popsize_group  FROM countries_plus AS c INNER JOIN pop_plus AS p 
ON c.code = p.country_code ORDER BY c.geosize_group;
___________________________________________________
# Two nested FULL JOIN
SELECT c1.name AS country, region, l.name AS language, basic_unit, frac_unit FROM
countries AS c1 FULL JOIN
languages AS l USING (code)
FULL JOIN  currencies AS c2 USING (code)
WHERE region LIKE 'M%esia';
________________________________________
+++++++++
Set Theory
+++++++++
__________________
# Set Theory clauses and semi-join
SELECT name FROM cities
WHERE country_code IN
(SELECT code FROM economies
UNION 
SELECT code FROM currencies
EXCEPT 
SELECT country_code FROM populations);
____________________
++++++
NestedQueries/SubQueries
++++++
__________
SELECT name, country_code, 	urbanarea_pop FROM cities
WHERE name IN (SELECT capital FROM countries)
ORDER BY urbanarea_pop DESC;
__________
# subq in select
SELECT countries.name AS coUntry, (SELECT COUNT(*) FROM cities WHERE countries.code = cities.country_code ) AS cities_num 
FROM countries 
ORDER BY cities_num DESC, country LIMIT 9;
__________________________________________
# A  lot of nested queries with GROUP statement
SELECT name, continent, inflation_rate
FROM 
countries INNER JOIN economies
ON countries.code = economies.code
WHERE year = 2015 AND inflation_rate IN 
(
SELECT MAX(inflation_rate) AS max_inf
FROM 
(
SELECT name, continent, inflation_rate
FROM countries
INNER JOIN economies
ON countries.code = economies.code
WHERE year = 2015
) AS subquery
GROUP BY continent);
_________________________
# compound conditional WHERE clause
SELECT code, inflation_rate, unemployment_rate FROM economies
WHERE year = 2015 AND code NOT IN 
(SELECT code FROM countries WHERE (gov_form = 'Constitutional Monarchy' OR gov_form LIKE '%Republic')) 
ORDER BY inflation_rate ;
______________________________
# Subquery in ON clause
SELECT DISTINCT name, total_investment, imports
FROM 
countries AS c LEFT JOIN economies AS e
ON (c.code = e.code AND c.code IN 
(
SELECT l.code FROM languages AS l
WHERE official = 'true'
) )
WHERE region = 'Central America' AND year = 2015
ORDER BY name;
______________________________
#using group by clausw
SELECT region, continent, AVG(fertility_rate) AS avg_fert_rate
FROM
countries INNER JOIN populations
ON countries.code =  populations.country_code
WHERE year = 2015
GROUP BY region, continent
ORDER BY avg_fert_rate;
__________________________________
#semi-join     
SELECT name, country_code, city_proper_pop, metroarea_pop, city_proper_pop / metroarea_pop * 100 AS city_perc
FROM cities
WHERE name IN 
(
  SELECT capital FROM countries 
  WHERE (continent = 'Europe' OR continent LIKE '%America')
)   
AND  metroarea_pop IS NOT NULL
ORDER BY city_perc DESC
LIMIT 10 ;
______________________________________
